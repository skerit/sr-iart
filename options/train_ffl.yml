# Training using Pixel Loss & FFL

# general settings
name: IART_DVD_Bluray_video
model_type: RecurrentMixPrecisionRTModel
scale: 4
num_gpu: 1
manual_seed: 0
find_unused_parameters: false
use_static_graph: true

# dataset and data loader settings
datasets:
  train:
    name: DVDBlurayVideoDataset
    type: VideoRecurrentDataset
    dataroot_gt: /workspace/videoset-4x/gt
    dataroot_lq: /workspace/videoset-4x/lq
    meta_info_file: /workspace/videoset-4x/video_metadata.json
    val_partition: REDS4
    test_mode: False
    io_backend:
      type: disk

    gt_size: 256   # Patch size for training - 64x64 LQ after 4x downscale
    interval_list: [1]

    # Augment training inputs
    random_reverse: true
    use_hflip: true
    use_rot: true

    # Shuffle the dataset
    use_shuffle: true

    # Use multiple workers for parallel video loading
    num_worker_per_gpu: 4

    # Enable pinned memory for faster GPU transfer
    pin_memory: true

    # Has to be 16
    num_frame: 16

    dataset_enlarge_ratio: 10
    batch_size_per_gpu: 1
    prefetch_mode: 'cuda'

  # Validation dataset - use a subset of videos or specific test clips
  val:
    name: DVDBlurayVideoDataset_Val
    type: VideoRecurrentDataset
    dataroot_gt: /workspace/videoset-4x/gt
    dataroot_lq: /workspace/videoset-4x/lq
    meta_info_file: /workspace/videoset-4x/val_metadata.json  # Separate validation metadata
    test_mode: True  # No augmentation for validation
    io_backend:
      type: disk
    
    gt_size: 512  # Use 512x512 patches for faster validation
    interval_list: [1]  # Fixed interval for consistent validation

    # Don't augment validation inputs
    random_reverse: false
    use_hflip: false
    use_rot: false

    # Has to be 16
    num_frame: 16
    
    # Validation data loader
    use_shuffle: false
    num_worker_per_gpu: 2
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    pin_memory: true

# network structures
network_g:
  type: IART
  mid_channels: 64
  embed_dim: 120
  depths: [6, 6, 6]
  num_heads: [6, 6, 6]
  window_size: [3, 8, 8]
  num_frames: 16  # Must match the pretrained model (N16)
  img_size: 64
  patch_size: 1
  cpu_cache_length: 100
  is_low_res_input: true
  use_checkpoint: [true, true, true, true]  # Enable gradient checkpointing to save memory
  spynet_path: experiments/pretrained_models/flownet/spynet_sintel_final-3d2a1287.pth

# path
path:
  pretrain_network_g: experiments/pretrained_models/IART_REDS_BI_N16.pth
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.99
  optim_g:
    type: Adam
    lr: !!float 2e-5  # Slightly higher LR with more data
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [50000]  # Longer period with more data
    restart_weights: [1]
    eta_min: !!float 1e-7

  # Total amount of iterations
  total_iter: 50000

  # Enable gradient clipping
  use_grad_clip: true
  grad_clip_norm: 0.9

  # Mixed precision training
  half_precision: true

  # Amount of warmup iterations
  warmup_iter: 100

  # OOM thing
  set_DINO_OOM: true
  
  high_loss_threshold: 0.15
  save_high_loss_images: true  # Set to true to also save images for high-loss patches

  # losses
  pixel_opt:
    type: CharbonnierLoss  # Standard Charbonnier loss (smooth L1)
    loss_weight: 1.0
    reduction: mean

  # Focal Frequency Loss - the star of the show!
  focal_freq_opt:
    type: FocalFrequencyLoss
    loss_weight: 2.0

    # Focusing strength (1.0 = balanced, >1 = stronger focus on hard frequencies)
    alpha: 1.0

    # Use full image (set to 2 or 4 for patch-based)
    patch_factor: 1

    # Don't average across batch
    ave_spectrum: false

    # Try true if training unstable
    log_matrix: false

    # Per-sample normalization
    batch_matrix: false

# validation settings (disabled for now)
val:
  # Validate every 100 iterations
  val_freq: 100

  # Save the images
  save_img: true

  # Also generate a comparison grid
  grids: true
  max_minibatch: 8

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim  
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 10  # Print every 10 iterations to see progress
  save_checkpoint_freq: 100  # Save frequently for video dataset
  use_tb_logger: true
  wandb:
    project: srvideo-ffl
    resume_id: srvideo-ffl

# dist training settings
dist_params:
  backend: nccl
  port: 29500