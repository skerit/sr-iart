# IART training configuration for DVDâ†’Blu-ray restoration with ConvNeXt perceptual loss
# Fine-tuning from REDS BI N16 pretrained model

# general settings
name: IART_DVD_Bluray_ConvNeXt
model_type: RecurrentMixPrecisionRTModel
scale: 4
num_gpu: 1
manual_seed: 0
find_unused_parameters: false
use_static_graph: true

# dataset and data loader settings
datasets:
  train:
    name: DVDBlurayVideoDataset
    type: VideoRecurrentDataset
    dataroot_gt: datasets/dvd_bluray/gt  # Directory with GT video files
    dataroot_lq: datasets/dvd_bluray/lq  # Directory with LQ video files
    meta_info_file: datasets/dvd_bluray/video_metadata.json
    val_partition: REDS4
    test_mode: False
    io_backend:
      type: disk

    num_frame: 16  # Number of frames per sequence

    # Patch size for training
    gt_size: 320

    # Use random (1, 2 or 3) interval per iteration
    interval_list: [1, 2, 3]

    # Randomly reverse the clips
    random_reverse: true

    # Randomly apply horizontal flips
    use_hflip: true

    # Randomly apply rotations
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 10
    prefetch_mode: 'cuda'
    pin_memory: true

# network structures
network_g:
  type: IART
  mid_channels: 64
  embed_dim: 120
  depths: [6, 6, 6]
  num_heads: [6, 6, 6]
  window_size: [3, 8, 8]
  num_frames: 16
  img_size: 64
  patch_size: 1
  cpu_cache_length: 100
  is_low_res_input: true
  use_checkpoint: [true, true, true, true]
  spynet_path: experiments/pretrained_models/flownet/spynet_sintel_final-3d2a1287.pth

# path
path:
  pretrain_network_g: experiments/pretrained_models/IART_REDS_BI_N16.pth
  strict_load_g: true
  resume_state: ~
  visualization: experiments/IART_DVD_Bluray_ConvNeXt

# training settings
train:

  # Gradient accumulation to simulate larger batch size
  gradient_accumulation_steps: 8

  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 3e-6  # Even more conservative for ConvNeXt
    weight_decay: 0.01
    betas: [0.9, 0.999]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [50000]
    restart_weights: [1]
    eta_min: !!float 1e-7

  total_iter: 50000
  use_grad_clip: true
  grad_clip_norm: 0.5
  accumulation_steps: 4
  set_DINO_OOM: true
  half_precision: true
  warmup_iter: 100

  # Logging thresholds for debugging
  high_loss_threshold: 0.06
  save_high_loss_images: true
  
  # Pixel loss - fundamental
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean

  # FFT loss for high-frequency details (grain, sharpness)
  fft_opt:
    type: FFTLoss
    loss_weight: 0.03  # Reduced slightly
    reduction: mean
  
  # ConvNeXt perceptual loss - more stable than VGG
  convnext_opt:
    type: ConvNextLoss
    loss_weight: 0.005  # Start conservative (half of what we tried with VGG)
    model_type: tiny  # tiny, small, base, or large
    feature_layers: [0, 2, 4, 6]  # Early-to-mid layers for stability
    use_gram: false  # Set to true if you want style transfer effects
    layer_weight_decay: 0.9  # How much to decay weights for deeper layers
    reduction: mean
    input_range: [0, 1]  # Our tensors are normalized to [0, 1]

# validation settings (disabled for now)
val:
  val_freq: !!float 999999
  save_img: false
  grids: false
  max_minibatch: 8

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: 100
  use_tb_logger: true
  wandb:
    project: srvideo-dvd-bluray-convnext
    resume_id: srvideo-dvd-bluray-convnext

# dist training settings
dist_params:
  backend: nccl
  port: 29500