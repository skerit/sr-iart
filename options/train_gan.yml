# CIPLAB-NTIRE-2020 Style Training Configuration
# Uses ALL losses from the NTIRE 2020 winning solution:
# - Pixel Loss (Huber/Charbonnier)
# - LPIPS Loss (Perceptual similarity)
# - Feature Matching Loss (from discriminator)
# - Adversarial Loss (GAN)
# - Consistency Loss (CutMix regularization)
#
# Two-stage training:
# Stage 1 (0-75k iter): Pixel loss only
# Stage 2 (75k-150k iter): All losses combined

# general settings
name: IART_CIPLAB_FeatureMatching
model_type: RecurrentMixPrecisionRTModel
scale: 4
num_gpu: 1
manual_seed: 0
find_unused_parameters: false
use_static_graph: true

# dataset and data loader settings
datasets:
  train:
    name: DVDBlurayVideoDataset
    type: VideoRecurrentDataset
    dataroot_gt: /workspace/videoset-4x/gt
    dataroot_lq: /workspace/videoset-4x/lq
    meta_info_file: /workspace/videoset-4x/video_metadata.json
    val_partition: REDS4
    test_mode: False
    io_backend:
      type: disk

    num_frame: 16   # MUST match checkpoint
    gt_size: 320   # Reduced from 384 to save memory (just patch size, not architecture)
    interval_list: [1]

    # Augmentation
    random_reverse: true
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 1  # Reduced from 2 to save memory
    dataset_enlarge_ratio: 10
    prefetch_mode: 'cuda'
    pin_memory: true

  val:
    name: DVDBlurayVideoDataset_Val
    type: VideoRecurrentDataset
    dataroot_gt: /workspace/videoset-4x/gt
    dataroot_lq: /workspace/videoset-4x/lq
    meta_info_file: /workspace/videoset-4x/val_metadata.json
    test_mode: True
    io_backend:
      type: disk
    
    num_frame: 16
    gt_size: 512
    interval_list: [1]

    random_reverse: false
    use_hflip: false
    use_rot: false
    
    use_shuffle: false
    num_worker_per_gpu: 2
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    pin_memory: true

# network structures
network_g:
  type: IART
  mid_channels: 64
  embed_dim: 120
  depths: [6, 6, 6]
  num_heads: [6, 6, 6]
  window_size: [3, 8, 8]
  num_frames: 16  # MUST match checkpoint
  img_size: 64  # 256/4 = 64 for LR patch size (matches new gt_size)
  patch_size: 1
  cpu_cache_length: 100
  is_low_res_input: true
  use_checkpoint: [true, true, true, true]
  spynet_path: experiments/pretrained_models/flownet/spynet_sintel_final-3d2a1287.pth

# Discriminator network (CIPLAB feature matching)
network_d:
  type: CIPLABUnetD

# path
path:
  pretrain_network_g: /workspace/iart_nbl_11600.pth
  strict_load_g: true
  pretrain_network_d: ~  # No pretrained discriminator
  strict_load_d: false
  resume_state: ~

# training settings
train:
  # Gradient accumulation
  gradient_accumulation_steps: 8
  d_gradient_accumulation_steps: 8

  ema_decay: 0.99
  
  # Generator optimizer
  optim_g:
    type: Adam
    lr: !!float 1e-5  # CIPLAB uses 1e-5
    weight_decay: 0
    betas: [0.9, 0.999]

  # Discriminator optimizer  
  optim_d:
    type: Adam
    lr: !!float 1e-5
    weight_decay: 0
    betas: [0.9, 0.999]

  scheduler:
    type: MultiStepLR
    milestones: [75000, 125000]
    gamma: 0.5

  # Total iterations matching CIPLAB
  total_iter: 50000
  
  # Two-stage training threshold
  perceptual_start_iter: 0  # Start GAN training immediately (0 = from first iteration)

  # Gradient clipping (CIPLAB uses 0.1)
  use_grad_clip: true
  grad_clip_norm: 0.1

  # Mixed precision training
  half_precision: true

  warmup_iter: 100

  set_DINO_OOM: true
  
  high_loss_threshold: 0.9
  save_high_loss_images: true

  # ========== LOSSES (CIPLAB Configuration) ==========
  
  # 1. Pixel Loss (Huber/Smooth L1) - Always active
  pixel_opt:
    type: CharbonnierLoss  # Similar to Huber loss used by CIPLAB
    loss_weight: 1.0
    reduction: mean
    eps: !!float 1e-6

  # 2. LPIPS Loss - Starts immediately
  lpips_opt:
    type: LPIPSLoss
    loss_weight: 0.001  # CIPLAB uses L_LPIPS = 1e-3
    net_type: alex  # AlexNet backbone (fastest, best metric)
    use_gpu: true
    spatial: false  # Return scalar loss
    version: '0.1'
    normalize: true  # Input is [0,1], needs conversion to [-1,1]
    reduction: mean
    start_iter: 0  # Start immediately (default behavior)

  # 3. Feature Matching Loss from Discriminator 2 (CIPLAB)
  feature_matching_opt:
    type: CIPLABFeatureMatchingLoss
    loss_weight: 1.0  # CIPLAB uses L_FM = 1

  # 4. Additional GAN loss from CIPLAB discriminator (optional)
  gan_opt:
    type: GANLoss
    gan_type: hinge  # ReLU-based like CIPLAB
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.001  # Same as CIPLAB

  # Discriminator update settings
  net_d_iters: 1  # Update D once per G update
  net_d_init_iters: 0  # No special D initialization

  # Manual scheduling for two-stage training
  manual_seed: 0

# validation settings
val:
  val_freq: 200
  save_img: true
  grids: true
  max_minibatch: 8

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: 200
  use_tb_logger: true
  wandb:
    project: IART-CIPLAB-AllLosses
    resume_id: IART-CIPLAB-AllLosses

dist_params:
  backend: nccl
  port: 29500